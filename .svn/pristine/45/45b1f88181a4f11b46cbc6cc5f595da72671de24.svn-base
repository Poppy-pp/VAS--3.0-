import util from 'utils/tools';

import { 
    getStorageInfoList, 
    addStorageInfo, 
    modifyStorageInfo, 
    removeStorageInfo, 
    getStorageDetails,
    getEmployeeInfoList,
    getStorageInfoSelect,
    getStorageParent,

    getCheckoutOfStoInfo 
} from './service.js';
import { checkChinese } from '@/utils/formValidation'

export default {
    props: ['windowOutHeight'],
    data() {
        return {
            fmtdata: util,
            prOptions: util.initProvince(),
            filters: {
                domSearch: [{
                    select: ['storagename'],
                    content: ''
                }], //查询框
            },
            value: '',
            pickerOptions: { //日期
            },
            empLoading:false,
            empOptions:[],//员工列表
            listData: [],
            parlist: [], //上级库房列表
            parLoading: false,
            noteDialogVisible:false,//删除弹窗
            noteForm:{
                rowstorageid:'',
                storagename:'',
                rowStoName:'',
            },
            customers: [],
            total: 0,
            currentPage: 1,
            pageSize: 15,
            listLoading: false,
            stoThisList: [],
            formDialogTableVisible: false,
            sels: [], //列表选中列
            checkoutDataT: true, //数据验证返回的布尔值true
            checkoutDataF: [], //数据验证组
            thisInput: '', //编辑时存入row验证的值
            editFormVisible: false, //编辑界面是否显示
            editLoading: false,
            editFormRules: {
                storagename: [{
                        required: true,
                        message: '请输入库房名称',
                        trigger: 'blur'
                    },
                    {
                        validator: checkChinese,
                        trigger: 'blur'
                    }
                ],
                managername: [{
                        required: true,
                        message: '请输入库管名称',
                        trigger: 'blur'
                }],
                storagelevel: [{required: true,message: '请选择库房级别',trigger: 'blur'}],
                parentname: [{required: true,message: '请选择上级库房',trigger: 'blur'}],
                addressAll: [{required: true,message: '请选择库房区域',trigger: 'blur'}],
            },
            //编辑界面数据
            editForm: {
                act_id: '',
                storagecode: '',
                storagename: '',
                storagelevel: '',
                parentid: '',
                parentname: '',
                addressAll: '',
                storageaddress:'',
                managerid: '',
                managername: '',
                managermobile: '',
                remark:'',
            },
            editFormId: {
                parentid: '',
                storageid: '',
                value: '',
                managerid: '',
                managername: '',
            },
            addFormVisible: false, //新增界面是否显示
            addLoading: false,
            addFormRules: {
                storagename: [{
                        required: true,
                        message: '请输入库房名称',
                        trigger: 'blur'
                    },
                    {
                        validator: checkChinese,
                        trigger: 'blur'
                    }
                ],
                managername: [{
                        required: true,
                        message: '请输入库管名称',
                        trigger: 'blur'
                }],
                storagelevel: [{required: true,message: '请选择库房级别',trigger: 'blur'}],
                parentname: [{required: true,message: '请选择上级库房',trigger: 'blur'}],
                addressAll: [{required: true,message: '请选择库房区域',trigger: 'blur'}],
            },
            //新增界面数据
            addForm: {
                storagecode: '',
                storagename: '',
                storagelevel: '',
                parentid: '',
                parentname: '',
                addressAll: '',
                storageaddress:'',
                managerid: '',
                managername: '',
                managermobile: '',
                remark:'',
            },
        }
    },
    methods: {
        // 上级库房——下拉
        parChange(r) {
            if(!r || this.parlist.length > 0) return;
            this.parLoading = true;
            getStorageParent().then((res) => {
                this.parlist = res.data.data;
                this.parLoading = false;
            });
        },
        // 上级库房——下拉
        parChangeSelect(query) {
            let para = {
                limit: 30,
                storagename: query,
            }
            this.parLoading = true;
            getStorageInfoList(para).then((res) => {
                this.parlist = res.data.data.records;
                this.parLoading = false;
            });
        },
        // 联动库房级别
        showLevel(val){
            if (this.editFormVisible) {
                this.editForm.parentid = val.id;
                this.editForm.storagelevel = val.storagelevel;
            }else{
                this.addForm.parentid = val.id;
                this.addForm.storagelevel = val.storagelevel;
            }
        },
        // 库管——搜索下拉
        empChange(r) {
            if(!r || this.empOptions.length > 0) return;
            this.empLoading = true;
            let para = {
                isactive: 1,
                limit:10000
            }
            getEmployeeInfoList(para).then((res) => {
                this.empOptions = res.data.data.records;
                this.empLoading = false;
            });
        },
        handleSelectName(value) {
            this.editForm.managername = value.employeename;
            this.editForm.managerid = value.ID;
            this.editForm.managermobile = value.mobile;
            this.addForm.managername = value.employeename;
            this.addForm.managerid = value.ID;
            this.addForm.managermobile = value.mobile;
        },
        //详情查看
        formDetailHandle(stoid) {
            this.formDialogTableVisible = true;
            this.stoThisList = ''; //清空上条数据
            let para = { id: stoid  }
            getStorageDetails(para).then((res) => {
                this.stoThisList = res.data.data;
            });
        },
        // 添加查询条件
        addSelect() {
            this.filters.domSearch.push({
                select: [],
                content: ''
            });
        },
        // 移除查询条件
        removeSelect(index) {
            this.filters.domSearch.splice(index, 1); //从当前index位置开始，删除一项
        },
        
        //转换
        levelFormat(row, col) {
            // return row.storagelevel == 1 ? '总库' : row.storagelevel == 2 ? '地方库' : row.storagelevel == 3 ? '个人库' : '未知';
            return row.storagelevel + ' 级库';
        },
      
        
        
        //切换当前页
        handleCurrentChange(val) {
            this.currentPage = val;
            this.handleQuery();
        },
        //切换每页显示数量
        handleSizeChange(val) {
            this.pageSize = val;
            this.handleQuery();
        },
        //获取列表
        handleQuery() {
            let para = {
                page: this.currentPage,
                limit: this.pageSize,
                domSearch: this.filters.domSearch,
            };
            this.listLoading = true;
            getStorageInfoSelect(para).then((res) => {
                this.total = res.data.data.total;
                this.listData = res.data.data.records;
                this.listLoading = false;
            }).catch((error) => {
                this.listLoading = false;
            });
        },
        // 删除弹窗
        handleDel(index, row) {
            this.noteDialogVisible = true;
            this.noteForm.storagename = '';//初始化
            this.noteForm.rowStoName = row.storagename; //当前 库房名称，用于弹窗显示
            this.noteForm.rowstorageid = row.id; //库房 id
        },
        //删除
        deleteConfirm() {
                let para = { 
                    id: this.noteForm.rowstorageid,
                    parentid: this.noteForm.storagename,
                };
                removeStorageInfo(para).then((res) => {
                    this.$message.success('删除成功！');
                    this.noteDialogVisible = false;
                    this.handleQuery();
                });
        },
        //显示编辑界面
        handleEdit(index, row) {
            $(".is-error").removeClass('is-error'); //清空验证时的红框
            this.editFormVisible = true;
            // 地址
            var addrVal = row.area;
            if(addrVal != null) {
                var addrArr = addrVal.split(",");
            } else {
                var addrArr = ["四川", "成都", "高新区"];
            }
            this.editForm = {
                id: row.id,
                storagecode: row.storagecode,
                storagename: row.storagename,
                storagelevel: row.storagelevel,
                parentid: row.parentid,
                parentname: row.parentname,
                addressAll: addrArr, //区域
                storageaddress:row.storageaddress,
                managerid: row.managerid,
                managername: row.managername,
                managermobile: row.managermobile,
                remark:row.remark,
            }
            this.editFormId = {
                parentid: row.parentid,
                parentname: row.parentname,
                storageid: row.storageid,
                storagelevel: row.storagelevel,
                value: row.value,
                managerid: row.managerid,
                managername: row.managername,
            }
            this.thisInput = this.editForm.storagename; //将当前验证的字段 已获得的值存入
        },
        //显示新增界面
        handleAdd() {
            $(".is-error").removeClass('is-error'); //清空验证时的红框
            this.addFormVisible = true;
            this.addForm = {
                storagecode: '',
                storagename: '',
                storagelevel: '',
                parentid: '',
                parentname: '',
                addressAll: ["四川", "成都", "高新区"],
                storageaddress:'',
                managerid: '',
                managername: '',
                managermobile: '',
                remark:'',
            };

        },
        //编辑
        editSubmit() {
            this.$refs.editForm.validate((valid) => {
                if(valid) {
                    this.editLoading = true;
                    let para = {
                        id: this.editForm.id,
                        storagename: this.editForm.storagename,
                        storagelevel: this.editForm.storagelevel,
                        parentid: this.editForm.parentid,
                        parentname: this.editForm.parentname,
                        storagearea:this.editForm.addressAll.toString(),
                        storageaddress :this.editForm.storageaddress,
                        remark:this.editForm.remark,
                        managerid: this.editForm.managerid,
                        managername: this.editForm.managername,
                        managermobile: this.editForm.managermobile,
                    }
                    this.editLoading = false;
                    modifyStorageInfo(para).then((res) => {
                        if (res.data) {
                            this.$message({
                                message: '编辑成功！',
                                type: 'success'
                            });
                            this.$refs['editForm'].resetFields();
                            this.editFormVisible = false;
                            this.handleQuery();
                        }
                        this.editLoading = false;
                    });
                }
            });
        },
        //新增
        addSubmit() {
            this.$refs.addForm.validate((valid) => {
                if(valid) {
                    this.addLoading = true;
                    let para = {
                        storagename: this.addForm.storagename,
                        storagelevel: this.addForm.storagelevel,
                        parentid: this.addForm.parentid,
                        parentname: this.addForm.parentname,
                        storagearea:this.addForm.addressAll.toString(),
                        storageaddress :this.addForm.storageaddress,
                        remark:this.addForm.remark,
                        managerid: this.addForm.managerid,
                        managername: this.addForm.managername,
                        managermobile: this.addForm.managermobile,
                    }
                    this.addLoading = false;
                    addStorageInfo(para).then((res) => {
                        if (res.data) {
                            this.$message({
                                message: '新增成功！',
                                type: 'success'
                            });
                            this.$refs['addForm'].resetFields();
                            this.addFormVisible = false;
                            this.handleQuery();
                        }
                        this.addLoading = false;
                    });
                }
            });
        },
    },
    created() {
        this.handleQuery();
    }
}