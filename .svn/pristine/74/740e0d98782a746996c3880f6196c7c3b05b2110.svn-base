// 验证所有电话
export const checkAllMobile = (rule, value, callback) => {
    var reg = /((\d{11})|^((\d{7,8})|(\d{4}|\d{3})-(\d{7,8})|(\d{4}|\d{3})-(\d{7,8})-(\d{4}|\d{3}|\d{2}|\d{1})|(\d{7,8})-(\d{4}|\d{3}|\d{2}|\d{1}))$)/g,
        flag = reg.test(value);
    if (!flag) {
        return callback(new Error('请输入电话号码或手机号码'));
    } else {
        callback();
    }
};

// 验证数字
export const checkNum = (rule, value, callback) => {
    var reg = /^[0-9]*$/g,
        flag = reg.test(value);
    if (!flag) {
        return callback(new Error('只能输入数字'));
    } else {
        callback();
    }
};

//验证车架号(只能输入数字和字母)
export const checkVin = (rule, value, callback) => {
    var reg = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]*$/g,
        flag = reg.test(value);
    if (!flag) {
        return callback(new Error('车架号必须为数字和字母组成'));
    } else {
        callback();
    }
};

//验证中文名字(只能输入中文不能大于四个子)
export const checkName = (rule, value, callback) => {
    var reg = /^[a-zA-Z\u4e00-\u9fa5]{1,10}$/g,
        flag = reg.test(value);
    if (!flag) {
        return callback(new Error('只能输入10个以内的汉字和字母'));
    } else {
        callback();
    }
};

//验证车牌号
export const checkVehicleNumber = (rule, value, callback) => {
    if ($.trim(value).length == 8) {//新能源汽车
        // var reg = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}(([0-9]{5}[DF])|([DF][A-HJ-NP-Z0-9][0-9]{4}))$/;
        var reg = /^[\u4e00-\u9fa5]{1}[A-Z]{1}[A-Z_0-9]{6}$/;
    } else {//普通汽车
        var reg = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳]{1}$/;
    }

    var flag = reg.test(value);
    if ($.trim(value) == '') {
        callback();
        return;
    }
    if (!flag) {
        return callback(new Error('车牌号格式不规范'));
    } else {
        callback();
    }
};

// 验证手机
export const checkMobile = (rule, value, callback) => {
    var reg = /^1\d{10}$/g,
        flag = reg.test(value);
    if (!flag) {
        return callback(new Error('请输入11位的手机号码'));
    } else {
        callback();
    }
};

//验证车主身份证号(只能输入11位数字)
export const checkIdcard = (rule, value, callback) => {
    var reg = /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/g,
        flag = reg.test(value);
    if ($.trim(value) == '') {
        callback();
        return;
    }
    if (!flag) {
        return callback(new Error('身份证格式不合法'));
    } else {
        callback();
    }
};